{"version":3,"sources":["components/Card_33.js","components/DemoList_33.js","demo.js","components/SearchBox_33.js","components/Scroll_33.js","containers/App_33.js","serviceWorker.js","index.js"],"names":["Card_33","A","img","name","text","className","style","width","src","alt","DemoList_33","demo","map","user","i","key","id","SearchBox_33","searchChange","type","placeholder","onChange","Scroll_33","props","overflow","border","height","children","App_33","onSearchChange","event","setState","searchField","target","value","state","filterRobots","this","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gOAaeA,EAVQ,SAACC,GAAO,IACnBC,EAAoBD,EAApBC,IAAKC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,KACnB,OACI,yBAAKC,UAAU,oDAAmDC,MAAO,CAACC,MAAO,MAC7E,yBAAKC,IAAKN,EAAKO,IAAI,MACnB,4BAAKN,GACL,4BAAKC,KCaDM,EAnBI,SAAC,GAAY,IAAXC,EAAU,EAAVA,KAClB,OACI,6BAEIA,EAAKC,KAAK,SAACC,EAAKC,GACZ,OACI,kBAAC,EAAD,CACAC,IAAKD,EACLE,GAAIH,EAAKG,GACTd,IAAKW,EAAKX,IACVC,KAAMU,EAAKV,KACXC,KAAMS,EAAKT,YCZlBO,EAAO,CAChB,CACEK,GAAG,EACHd,IAAI,cACJC,KAAM,gCACNC,KAAO,gMAET,CACEY,GAAG,EACHd,IAAK,cACLC,KAAM,iBACNC,KAAO,kKAET,CACEY,GAAG,EACHd,IAAK,cACLC,KAAM,YACNC,KAAO,0FAET,CACEY,GAAG,EACHd,IAAK,cACLC,KAAM,sBACNC,KAAO,gGAET,CACEY,GAAI,EACJd,IAAK,cACLC,KAAM,eACNC,KAAO,gGAET,CACEY,GAAI,EACJd,IAAK,cACLC,KAAM,cACNC,KAAO,8EAET,CACEY,GAAI,EACJd,IAAK,cACLC,KAAM,cACNC,KAAO,8KAET,CACEY,GAAI,EACJd,IAAK,cACLC,KAAM,QACNC,KAAO,0CAET,CACEY,GAAI,EACJd,IAAK,cACLC,KAAM,UACNC,KAAO,2CAET,CACEY,GAAI,GACJd,IAAK,eACLC,KAAM,QACNC,KAAO,4FC/CEa,EAZa,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAC3B,OACI,yBAAKb,UAAU,OACX,2BACAA,UAAU,0DACVc,KAAK,SACLC,YAAY,cACZC,SAAUH,MCCPI,G,MATG,SAACC,GAClB,OAAO,yBACAjB,MAAO,CACPkB,SAAU,SACVC,OAAQ,kBACRC,OAAQ,UACPH,EAAMI,YCgCAC,E,kDA/Bd,aAAe,IAAD,8BACb,gBAUDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAV1C,EAAKC,MAAQ,CAEZxB,KAAMA,EACNqB,YAAa,IALD,E,qDAcJ,IAAD,OACFI,EAAeC,KAAKF,MAAMxB,KAAK2B,QAAO,SAAC3B,GAC5C,OAAOA,EAAKR,KAAKoC,cAAcC,SAAS,EAAKL,MAAMH,YAAYO,kBAE/D,OACC,yBAAKlC,UAAU,MACC,0CACA,yBAAKA,UAAU,gBAC9B,kBAAC,EAAD,CAAca,aAAcmB,KAAKR,kBAElB,kBAAC,EAAD,KACf,kBAAC,EAAD,CAAalB,KAAMyB,U,GA1BHK,aCKDC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.3b0cc612.chunk.js","sourcesContent":["import React from 'react'\n// import demo from './demo';\n\nexport const Card_33 = (A) => {\n    const { img, name, text } = A;\n    return (\n        <div className='tc bg-light-red dib br3 pa3 ma2 grow bw2 shadow-5'style={{width: 500}}>\n            <img src={img} alt='#' />      \n            <h2>{name}</h2>      \n            <h3>{text}</h3>\n        </div>\n    )\n}\nexport default Card_33;","import React from 'react';\nimport Card_33 from './Card_33';\n\nconst DemoList_33 = ({demo}) => {\n    return (\n        <div>\n            {\n            demo.map( (user,i) =>{ \n                return(\n                    <Card_33 \n                    key={i}\n                    id={user.id}\n                    img={user.img}\n                    name={user.name} \n                    text={user.text}/>\n                )\n            } )\n\n            }\n        </div>\n    )\n}\n export default DemoList_33;","import React from 'react'\n\nexport const demo = [\n    {\n      id:1,\n      img:'./img/1.png',\n      name: 'The Unconventional Calculator',\n      text : '-輸入數字可以加減乘除，運用ＪＳ印出該有計算的答案；增加navbar和連結-'\n    },\n    {\n      id:2,\n      img: './img/2.png',\n      name: 'Monster Killer',\n      text : '-與怪獸對決，按攻擊鍵能攻擊補血鍵能補血，血量條的變化-'\n    },\n    {\n      id:3,\n      img: './img/3.png',\n      name: 'DOM Movie',\n      text : '-能增新喜愛的電影、圖片和連結-'\n    },\n    {\n      id:4,\n      img: './img/4.png',\n      name: 'Custom Video Player',\n      text : '-播放影集，能拉時間軸和暫停播放-'\n    },\n    {\n      id: 5,\n      img: './img/5.png',\n      name: 'Music Player',\n      text : '-播放音樂，能拉時間軸和暫停播放-'\n    },\n    {\n      id: 6,\n      img: './img/6.png',\n      name: 'Meal Finder',\n      text : '-查詢食譜，點圖片顯示步驟-'\n    },\n    {\n      id: 7,\n      img: './img/7.png',\n      name: 'RoboFriends',\n      text : '-顯示卡片，內容包含圖片、名稱和電子信箱，可以搜尋對應卡片-'\n    },\n    {\n      id: 8,\n      img: './img/8.png',\n      name: 'Figma',\n      text : '-設計登入介面-'\n    },\n    {\n      id: 9,\n      img: './img/9.png',\n      name: 'Pokemon',\n      text : '-顯示Pokemon的資料-'\n    },\n    {\n      id: 10,\n      img: './img/10.png',\n      name: 'TKU60',\n      text : '-可觀看可觀看影片，buttond可以運行-'\n    }\n  ];\n  ","import React from 'react'\n\nexport const SearchBox_33 = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n            className='tc pa3 bw2 ba b--dashed b--dark-red bg-light-yellow br4' \n            type=\"search\"\n            placeholder=\"search demo\"\n            onChange={searchChange}/>\n        </div>\n    )\n}\n\nexport default SearchBox_33;","import React from 'react';\nconst Scroll_33 = (props) => {\n\treturn <div \n        style={{ \n        overflow: 'scroll', \n        border: '1px solid black', \n        height: '800px' }}> \n        {props.children} \n        </div>;\n};\nexport default Scroll_33;\n","import React, { Component } from 'react';\nimport DemoList_33 from '../components/DemoList_33';\nimport { demo } from '../demo';\nimport SearchBox_33 from '../components/SearchBox_33';\nimport './App_33.css';\nimport Scroll_33 from '../components/Scroll_33';\n\nclass App_33 extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\t\n\t\t\tdemo: demo,\n\t\t\tsearchField: ''\n\t\t};\n\t}\n\n\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({ searchField: event.target.value });\n\t};\n\trender() {\n\t\tconst filterRobots = this.state.demo.filter((demo) => {\n\t\t\treturn demo.name.toLowerCase().includes(this.state.searchField.toLowerCase());\n\t\t});\n\t\t\treturn (\n\t\t\t\t<div className=\"tc\">\n                    <h1>Class Demo</h1>\n                    <div className=\"bg-yellow bt\" >\n\t\t\t\t\t<SearchBox_33 searchChange={this.onSearchChange} />\n                    </div>\n                    <Scroll_33>\n\t\t\t\t\t<DemoList_33 demo={filterRobots} />\n                    </Scroll_33>\n\t\t\t\t</div>\n\t\t\t);\n\t}\n}\nexport default App_33;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App_33 from './containers/App_33';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App_33/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}